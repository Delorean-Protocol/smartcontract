{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "config"
  ],
  "properties": {
    "config": {
      "$ref": "#/definitions/Config"
    }
  },
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Config": {
      "type": "object",
      "required": [
        "admin",
        "mint_limit",
        "minter",
        "nft_contract",
        "nft_metadata",
        "price",
        "shares"
      ],
      "properties": {
        "admin": {
          "type": "string"
        },
        "mint_limit": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "minter": {
          "type": "string"
        },
        "nft_contract": {
          "type": "string"
        },
        "nft_metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "price": {
          "$ref": "#/definitions/Coin"
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundShare"
          }
        }
      }
    },
    "FundShare": {
      "type": "object",
      "required": [
        "address",
        "note",
        "share"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "share": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "animation_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "attributes": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Trait"
          }
        },
        "background_color": {
          "type": [
            "string",
            "null"
          ]
        },
        "description": {
          "type": [
            "string",
            "null"
          ]
        },
        "external_url": {
          "type": [
            "string",
            "null"
          ]
        },
        "image": {
          "type": [
            "string",
            "null"
          ]
        },
        "image_data": {
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "youtube_url": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Trait": {
      "type": "object",
      "required": [
        "trait_type",
        "value"
      ],
      "properties": {
        "display_type": {
          "type": [
            "string",
            "null"
          ]
        },
        "trait_type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
